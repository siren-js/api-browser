{"version":3,"sources":["components/Hero.tsx","with.ts","components/Location.tsx","components/navbar/NavbarBrand.tsx","components/util/Icon.tsx","components/util/Modal.tsx","components/util/Panel.tsx","components/util/Tags.tsx","components/navbar/GitHubLinkItem.tsx","SettingsContext.ts","components/settings/HeaderFormModal.tsx","components/settings/HeadersTable.tsx","components/settings/HeadersSetting.tsx","components/settings/TitleCasePropertyNamesSetting.tsx","components/settings/SettingsModal.tsx","components/navbar/SettingsItem.tsx","components/navbar/NavbarMenu.tsx","components/render/Tabs.tsx","components/navbar/Navbar.tsx","components/render/field/core.tsx","components/render/field/CheckboxControl.tsx","components/render/field/DefaultInputControl.tsx","components/render/field/FileUploadControl.tsx","components/render/field/RadioButtonControl.tsx","components/render/field/SelectControl.tsx","components/render/field/TextareaControl.tsx","components/render/field/index.tsx","components/render/action/ActionForm.tsx","components/render/action/ActionFormModal.tsx","components/render/action/ActionsPanel.tsx","components/render/link/LinkPanelBlock.tsx","components/render/link/LinksPanel.tsx","components/render/Properties.tsx","components/render/sub-entity/EmbeddedEntityModal.tsx","components/render/sub-entity/EmbeddedEntityPanelBlock.tsx","components/render/sub-entity/SubEntitiesPanel.tsx","components/render/Rendering.tsx","components/render/Renderer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Hero","className","HeroBody","withFn","f","g","withPreventDefault","event","preventDefault","Location","props","state","isNavigating","submit","bind","a","this","setState","onNavigate","onSubmit","htmlFor","id","type","placeholder","value","url","onChange","onUrlChange","target","React","Component","NavbarBrand","active","href","onClick","onBurgerClick","role","aria-label","aria-expanded","data-target","targetElementId","aria-hidden","IconStyle","IconSize","IconType","IconContainerSize","Icon","name","style","Solid","size","Normal","containerSize","left","ModalContainer","onClose","children","Modal","ModalCard","title","ModalCardBody","ModalCardFoot","Panel","Tags","values","map","index","GitHubLinkItem","rel","Brands","Large","SettingsContext","createContext","headers","Headers","titleCasePropertyNames","addHeader","deleteHeader","editHeader","toggleTitleCasePropertyNames","HeaderFormModal","header","disableName","disabled","e","HeadersTable","isAddHeaderModalActive","activateAddHeaderModal","activateEditHeaderModal","deactivateAddHeaderModal","deactivateEditHeaderModal","activeEditHeaderModal","undefined","context","entries","colSpan","console","log","HeadersSetting","TitleCasePropertyNamesSetting","Consumer","checked","SettingsModal","contextType","SettingsItem","isModalActive","activateModal","deactivateModal","NavbarMenu","version","View","Navbar","isMenuActive","toggleMenu","Tabs","view","Rendering","isActive","activeTab","Source","Tab","BasicFormField","field","FormControl","FormField","Label","labelText","useFieldValue","useState","String","setValue","CheckboxControl","setChecked","controlIcons","Map","DefaultInputControl","input","controlIcon","get","Small","FileUploadControl","selectedFiles","setSelectedFiles","length","multiple","files","file","RadioButtonControl","buttons","group","init","findIndex","button","checkedIndex","setCheckedIndex","SelectControl","options","option","selected","selectedIndex","setSelectedIndex","TextareaControl","InputControl","ActionForm","fields","onCancel","ActionFormModal","action","ActionsPanel","activeModal","activate","deactivate","actionName","actions","Fragment","ActionPanelBlock","LinkPanelBlock","link","includes","join","LinksPanel","links","Properties","Object","keys","key","toTitleCase","EmbeddedEntityModal","embeddedEntity","onFollow","cols","entity","getLinksByRel","EmbeddedEntityPanelBlock","label","SubEntitiesPanel","subEntityIndex","subEntities","subEntity","EmbeddedLink","SingleColumnRendering","EntityProperties","properties","EntityActions","isNonEmpty","EntityLinks","EntitySubEntities","entities","DoubleColumnRendering","Header","class","Renderer","updateView","JSON","stringify","App","client","SirenClient","fetch","follow","locationUrl","append","delete","set","response","siren","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f75f63f.chunk.js","sourcesContent":["export default function Hero() {\r\n  return (\r\n    <section className=\"hero is-info\">\r\n      <HeroBody />\r\n    </section>\r\n  );\r\n}\r\n\r\nconst HeroBody = () => (\r\n  <div className=\"hero-body\">\r\n    <div className=\"container has-text-centered\">\r\n      <p className=\"title\">Siren API Browser</p>\r\n      <p className=\"subtitle\">with Siren.js</p>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\n/**\r\n * Creates a function that calls the function `g` before calling the function\r\n * `f`\r\n */\r\nexport default function withFn<T>(f: AnyFn<T>, g: AnyFn): AnyFn<T> {\r\n  return (...args: any[]) => {\r\n    g(...args);\r\n    return f(...args);\r\n  };\r\n}\r\n\r\nexport function withPreventDefault(f: AnyFn<void>): AnyFn<void> {\r\n  return withFn(f, (event: React.BaseSyntheticEvent) => {\r\n    event.preventDefault();\r\n  });\r\n}\r\n\r\nexport type AnyFn<T = any> = (...args: any[]) => T;\r\n","import React from 'react';\r\nimport { withPreventDefault } from '../with';\r\n\r\nexport interface LocationProps {\r\n  onNavigate: () => Promise<void>;\r\n  onUrlChange: (url: string) => void;\r\n  url: string;\r\n}\r\n\r\ninterface LocationState {\r\n  isNavigating: boolean;\r\n}\r\n\r\nexport default class Location extends React.Component<\r\n  LocationProps,\r\n  LocationState\r\n> {\r\n  state: LocationState = {\r\n    isNavigating: false\r\n  };\r\n\r\n  constructor(props: LocationProps) {\r\n    super(props);\r\n    this.submit = this.submit.bind(this);\r\n  }\r\n\r\n  async submit() {\r\n    this.setState({ isNavigating: true });\r\n    await this.props.onNavigate();\r\n    this.setState({ isNavigating: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"pb-5\" onSubmit={withPreventDefault(this.submit)}>\r\n        <div className=\"columns is-vcentered\">\r\n          <div className=\"column has-text-right-tablet\">\r\n            <label className=\"label\" htmlFor=\"location\">\r\n              Location\r\n            </label>\r\n          </div>\r\n          <div className=\"column is-two-thirds\">\r\n            <input\r\n              id=\"location\"\r\n              className=\"input\"\r\n              type=\"url\"\r\n              placeholder=\"URL\"\r\n              value={this.props.url}\r\n              onChange={(event) => this.props.onUrlChange(event.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"column\">\r\n            <button\r\n              className={`button is-info ${\r\n                this.state.isNavigating ? 'is-loading' : ''\r\n              }`}\r\n            >\r\n              Fetch\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import { withPreventDefault } from '../../with';\r\n\r\nexport interface NavbarBrandProps {\r\n  targetElementId: string;\r\n  active: boolean;\r\n  onBurgerClick: () => void;\r\n}\r\n\r\nexport default function NavbarBrand(props: NavbarBrandProps) {\r\n  return (\r\n    <div className=\"navbar-brand\">\r\n      <a\r\n        className={`navbar-burger${props.active ? ' is-active' : ''}`}\r\n        href=\"/#\"\r\n        onClick={withPreventDefault(props.onBurgerClick)}\r\n        role=\"button\"\r\n        aria-label=\"menu\"\r\n        aria-expanded={props.active}\r\n        data-target={props.targetElementId}\r\n      >\r\n        <span aria-hidden=\"true\"></span>\r\n        <span aria-hidden=\"true\"></span>\r\n        <span aria-hidden=\"true\"></span>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","export enum IconStyle {\r\n  Solid = 'fas',\r\n  Brands = 'fab'\r\n}\r\n\r\nexport enum IconSize {\r\n  Normal = '',\r\n  Large = 'fa-lg',\r\n  ExtraLarge = 'fa-2x'\r\n}\r\n\r\nexport enum IconType {\r\n  FileIcon = 'file-icon',\r\n  Icon = 'icon',\r\n  PanelIcon = 'panel-icon'\r\n}\r\n\r\nexport enum IconContainerSize {\r\n  Small = 'is-small',\r\n  Normal = '',\r\n  Medium = 'is-medium',\r\n  Large = 'is-large'\r\n}\r\n\r\nexport interface IconProps {\r\n  name: string;\r\n  style?: IconStyle;\r\n  size?: IconSize;\r\n  type?: IconType;\r\n  containerSize?: IconContainerSize;\r\n  left?: boolean;\r\n}\r\n\r\nexport const Icon = ({\r\n  name,\r\n  style = IconStyle.Solid,\r\n  size = IconSize.Normal,\r\n  type = IconType.Icon,\r\n  containerSize = IconContainerSize.Normal,\r\n  left = false\r\n}: IconProps) => (\r\n  <span className={`${type} ${containerSize} ${left ? 'is-left' : ''}`}>\r\n    <i className={`${style} fa-${name} ${size}`}></i>\r\n  </span>\r\n);\r\n","import React from 'react';\r\n\r\nconst ModalContainer = (props: ModalProps) => (\r\n  <div className={`modal${props.active ? ' is-active' : ''}`}>\r\n    <div className=\"modal-background\" onClick={props.onClose}></div>\r\n    {props.children}\r\n  </div>\r\n);\r\n\r\nexport const Modal = (props: ModalProps) => (\r\n  <ModalContainer {...props}>\r\n    <div className=\"modal-content\">{props.children}</div>\r\n    <button\r\n      className=\"modal-close is-large\"\r\n      aria-label=\"close\"\r\n      onClick={props.onClose}\r\n    ></button>\r\n  </ModalContainer>\r\n);\r\n\r\nexport const ModalCard = (props: ModalCardProps) => (\r\n  <ModalContainer {...props}>\r\n    <div className=\"modal-card\">\r\n      <header className=\"modal-card-head\">\r\n        <p className=\"modal-card-title\">{props.title}</p>\r\n        <button\r\n          className=\"delete\"\r\n          aria-label=\"close\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n      </header>\r\n      {props.children}\r\n    </div>\r\n  </ModalContainer>\r\n);\r\n\r\nexport interface ModalProps {\r\n  active: boolean;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nexport interface ModalCardProps extends ModalProps {\r\n  title: string;\r\n}\r\n\r\nexport const ModalCardBody = (props: ModalCardBodyProps) => (\r\n  <section className=\"modal-card-body\">{props.children}</section>\r\n);\r\n\r\nexport interface ModalCardBodyProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ModalCardFoot = (props: ModalCardFooterProps) => (\r\n  <footer className=\"modal-card-foot\">{props.children}</footer>\r\n);\r\n\r\nexport interface ModalCardFooterProps {\r\n  children?: React.ReactNode;\r\n}\r\n","import React from 'react';\r\n\r\nexport interface PanelProps {\r\n  children: React.ReactNode;\r\n  title: string;\r\n}\r\n\r\nexport default function Panel(props: PanelProps) {\r\n  return (\r\n    <article className=\"panel is-info\">\r\n      <p className=\"panel-heading\">{props.title}</p>\r\n      {props.children}\r\n    </article>\r\n  );\r\n}\r\n","export default function Tags(props: { values: readonly string[] }) {\r\n  return (\r\n    <div className=\"tags\">\r\n      {props.values?.map((name, index) => (\r\n        <span className=\"tag is-info\" key={index}>\r\n          {name}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { Icon, IconSize, IconStyle } from '../util';\r\n\r\nexport default function GitHubLinkItem() {\r\n  return (\r\n    <a\r\n      className=\"navbar-item\"\r\n      href=\"https://github.com/siren-js/api-browser\"\r\n      target=\"_blank\"\r\n      rel=\"noreferrer\"\r\n    >\r\n      <Icon name=\"github\" style={IconStyle.Brands} size={IconSize.Large} />\r\n    </a>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport interface Settings {\r\n  headers: Headers;\r\n  titleCasePropertyNames: boolean;\r\n  addHeader: (name: string, value: string) => void;\r\n  deleteHeader: (name: string) => void;\r\n  editHeader: (name: string, value: string) => void;\r\n  toggleTitleCasePropertyNames: () => void;\r\n}\r\n\r\nconst SettingsContext = React.createContext<Settings>({\r\n  headers: new Headers(),\r\n  titleCasePropertyNames: false,\r\n  addHeader: () => {},\r\n  deleteHeader: () => {},\r\n  editHeader: () => {},\r\n  toggleTitleCasePropertyNames: () => {}\r\n});\r\n\r\nexport default SettingsContext;\r\n","import React from 'react';\r\nimport { ModalCard, ModalCardBody, ModalCardFoot } from '../util';\r\n\r\nexport interface HeaderFormModalProps {\r\n  active: boolean;\r\n  title: string;\r\n  header?: Header;\r\n  disableName?: boolean;\r\n  onClose: () => void;\r\n  onSubmit: (header: Header) => void;\r\n}\r\n\r\nexport interface Header {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\nexport default class HeaderFormModal extends React.Component<\r\n  HeaderFormModalProps,\r\n  Header\r\n> {\r\n  constructor(props: HeaderFormModalProps) {\r\n    super(props);\r\n    this.state = {\r\n      name: props.header?.name ?? '',\r\n      value: props.header?.value ?? ''\r\n    };\r\n    this.submit = this.submit.bind(this);\r\n  }\r\n\r\n  submit() {\r\n    this.props.onSubmit(this.state);\r\n    if (!this.props.disableName) {\r\n      this.setState({ name: '', value: '' });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ModalCard\r\n        active={this.props.active}\r\n        title={this.props.title}\r\n        onClose={this.props.onClose}\r\n      >\r\n        <ModalCardBody>\r\n          <form onSubmit={this.submit}>\r\n            <div className=\"field\">\r\n              <label className=\"label\">Name</label>\r\n              <div className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  placeholder=\"Header name (Api-Key, Authorization, etc.)\"\r\n                  disabled={this.props.disableName}\r\n                  value={this.state.name}\r\n                  onChange={(e) => this.setState({ name: e.target.value })}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label className=\"label\">Value</label>\r\n              <div className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  placeholder=\"Header value(s)\"\r\n                  value={this.state.value}\r\n                  onChange={(e) => this.setState({ value: e.target.value })}\r\n                />\r\n              </div>\r\n              <p className=\"help\">\r\n                Separate multiple values with a comma and a space\r\n              </p>\r\n            </div>\r\n          </form>\r\n        </ModalCardBody>\r\n        <ModalCardFoot>\r\n          <button className=\"button is-info\" onClick={this.submit}>\r\n            Submit\r\n          </button>\r\n          <button\r\n            className=\"button is-info is-outlined\"\r\n            onClick={this.props.onClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </ModalCardFoot>\r\n      </ModalCard>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport SettingsContext from '../../SettingsContext';\r\nimport HeaderFormModal from './HeaderFormModal';\r\nimport { Icon } from '../util';\r\n\r\nexport interface HeadersTableState {\r\n  isAddHeaderModalActive: boolean;\r\n  activeEditHeaderModal?: string;\r\n}\r\n\r\nexport default class HeadersTable extends React.Component<\r\n  {},\r\n  HeadersTableState\r\n> {\r\n  static contextType = SettingsContext;\r\n\r\n  state: HeadersTableState = {\r\n    isAddHeaderModalActive: false\r\n  };\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.activateAddHeaderModal = this.activateAddHeaderModal.bind(this);\r\n    this.activateEditHeaderModal = this.activateEditHeaderModal.bind(this);\r\n    this.deactivateAddHeaderModal = this.deactivateAddHeaderModal.bind(this);\r\n    this.deactivateEditHeaderModal = this.deactivateEditHeaderModal.bind(this);\r\n  }\r\n\r\n  activateAddHeaderModal() {\r\n    this.setState({ isAddHeaderModalActive: true });\r\n  }\r\n\r\n  activateEditHeaderModal(name: string) {\r\n    this.setState({ activeEditHeaderModal: name });\r\n  }\r\n\r\n  deactivateAddHeaderModal() {\r\n    this.setState({ isAddHeaderModalActive: false });\r\n  }\r\n\r\n  deactivateEditHeaderModal() {\r\n    this.setState({ activeEditHeaderModal: undefined });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <table className=\"table is-fullwidth is-hoverable\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Value</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {[...this.context.headers.entries()].map(([name, value]) => (\r\n            <tr key={name}>\r\n              <td className=\"has-whitespace-nowrap\">\r\n                <code>{name}</code>\r\n              </td>\r\n              <td className=\"has-whitespace-nowrap\">\r\n                <code>{value}</code>\r\n              </td>\r\n              <td className=\"has-whitespace-nowrap\">\r\n                <button\r\n                  className=\"button is-small is-outlined is-info mr-1\"\r\n                  onClick={() => this.activateEditHeaderModal(name)}\r\n                >\r\n                  <Icon name=\"edit\" />\r\n                  <span>Edit</span>\r\n                </button>\r\n                <HeaderFormModal\r\n                  title={`Edit ${name} Header`}\r\n                  active={this.state.activeEditHeaderModal === name}\r\n                  header={{ name, value }}\r\n                  disableName={true}\r\n                  onClose={this.deactivateEditHeaderModal}\r\n                  onSubmit={({ value }) => {\r\n                    this.context.editHeader(name, value);\r\n                    this.deactivateEditHeaderModal();\r\n                  }}\r\n                />\r\n                <button\r\n                  className=\"button is-small is-outlined is-danger\"\r\n                  onClick={() => this.context.deleteHeader(name)}\r\n                >\r\n                  <Icon name=\"trash-alt\" />\r\n                  <span>Delete</span>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            <td colSpan={3}>\r\n              <button\r\n                className=\"button is-small is-outlined is-info\"\r\n                onClick={this.activateAddHeaderModal}\r\n              >\r\n                <Icon name=\"plus\" />\r\n                <span>Add</span>\r\n              </button>\r\n              <HeaderFormModal\r\n                title=\"Add Header\"\r\n                active={this.state.isAddHeaderModalActive}\r\n                onClose={this.deactivateAddHeaderModal}\r\n                onSubmit={({ name, value }) => {\r\n                  console.log(`adding ${name}: ${value}`);\r\n                  this.context.addHeader(name, value);\r\n                  this.deactivateAddHeaderModal();\r\n                }}\r\n              />\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n","import HeadersTable from './HeadersTable';\r\n\r\nexport default function HeadersSetting() {\r\n  return (\r\n    <>\r\n      <p className=\"title is-4\">Headers</p>\r\n      <p className=\"subtitle is-6\">\r\n        Customize HTTP headers sent in each request\r\n      </p>\r\n      <div className=\"table-container\">\r\n        <HeadersTable />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import SettingsContext from '../../SettingsContext';\r\n\r\nexport default function TitleCasePropertyNamesSetting() {\r\n  return (\r\n    <SettingsContext.Consumer>\r\n      {({ titleCasePropertyNames, toggleTitleCasePropertyNames }) => (\r\n        <div className=\"field\">\r\n          <div className=\"control\">\r\n            <label className=\"checkbox has-text-dark\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={titleCasePropertyNames}\r\n                onChange={toggleTitleCasePropertyNames}\r\n              />\r\n              &nbsp; Convert property names to title case\r\n            </label>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </SettingsContext.Consumer>\r\n  );\r\n}\r\n","import { ModalCard, ModalCardBody, ModalCardFoot, ModalProps } from '../util';\r\nimport HeadersSetting from './HeadersSetting';\r\nimport TitleCasePropertyNamesSetting from './TitleCasePropertyNamesSetting';\r\n\r\nexport default function SettingsModal(props: ModalProps) {\r\n  return (\r\n    <ModalCard {...props} title=\"Settings\">\r\n      <ModalCardBody>\r\n        <TitleCasePropertyNamesSetting />\r\n        <hr />\r\n        <HeadersSetting />\r\n      </ModalCardBody>\r\n      <ModalCardFoot />\r\n    </ModalCard>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Icon, IconSize } from '../util';\r\nimport { SettingsModal } from '../settings';\r\nimport { withPreventDefault } from '../../with';\r\n\r\nexport interface SettingsItemState {\r\n  isModalActive: boolean;\r\n}\r\n\r\nexport default class SettingsItem extends React.Component<\r\n  {},\r\n  SettingsItemState\r\n> {\r\n  state: SettingsItemState = {\r\n    isModalActive: false\r\n  };\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.activateModal = this.activateModal.bind(this);\r\n    this.deactivateModal = this.deactivateModal.bind(this);\r\n  }\r\n\r\n  activateModal() {\r\n    this.setState({ isModalActive: true });\r\n  }\r\n\r\n  deactivateModal() {\r\n    this.setState({ isModalActive: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <a\r\n          href=\"/#\"\r\n          className=\"navbar-item\"\r\n          onClick={withPreventDefault(this.activateModal)}\r\n        >\r\n          <Icon name=\"cog\" size={IconSize.Large} />\r\n        </a>\r\n        <SettingsModal\r\n          active={this.state.isModalActive}\r\n          onClose={this.deactivateModal}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { version } from '../../../package.json';\r\nimport GitHubLinkItem from './GitHubLinkItem';\r\nimport SettingsItem from './SettingsItem';\r\n\r\nexport interface NavbarMenuProps {\r\n  id: string;\r\n  active: boolean;\r\n}\r\n\r\nexport default function NavbarMenu(props: NavbarMenuProps) {\r\n  return (\r\n    <div\r\n      id={props.id}\r\n      className={`navbar-menu${props.active ? ' is-active' : ''}`}\r\n    >\r\n      <div className=\"navbar-end\">\r\n        <div className=\"navbar-item has-text-weight-bold\">v{version}</div>\r\n        <GitHubLinkItem />\r\n        <SettingsItem />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { withPreventDefault } from '../../with';\r\n\r\nexport enum View {\r\n  Rendering,\r\n  Source\r\n}\r\n\r\nexport interface TabsProps {\r\n  activeTab: View;\r\n  onChange: (tab: View) => void;\r\n}\r\n\r\nexport const Tabs = (props: TabsProps) => (\r\n  <div className=\"tabs\">\r\n    <ul>\r\n      <Tab\r\n        view={View.Rendering}\r\n        isActive={props.activeTab === View.Rendering}\r\n        onClick={props.onChange}\r\n      />\r\n      <Tab\r\n        view={View.Source}\r\n        isActive={props.activeTab === View.Source}\r\n        onClick={props.onChange}\r\n      />\r\n    </ul>\r\n  </div>\r\n);\r\n\r\ninterface TabProps {\r\n  view: View;\r\n  isActive: boolean;\r\n  onClick: (tab: View) => void;\r\n}\r\n\r\nconst Tab = (props: TabProps) => (\r\n  <li className={props.isActive ? 'is-active' : ''}>\r\n    <a href=\"/#\" onClick={withPreventDefault(() => props.onClick(props.view))}>\r\n      {View[props.view]}\r\n    </a>\r\n  </li>\r\n);\r\n","import React from 'react';\r\nimport './Navbar.css';\r\nimport NavbarBrand from './NavbarBrand';\r\nimport NavbarMenu from './NavbarMenu';\r\n\r\nexport interface NavbarState {\r\n  isMenuActive: boolean;\r\n}\r\n\r\nexport default class Navbar extends React.Component<{}, NavbarState> {\r\n  state: NavbarState = {\r\n    isMenuActive: false\r\n  };\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.toggleMenu = this.toggleMenu.bind(this);\r\n  }\r\n\r\n  toggleMenu() {\r\n    this.setState({ isMenuActive: !this.state.isMenuActive });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar is-info\" role=\"navigation\" aria-label=\"navigation\">\r\n        <div className=\"container\">\r\n          <NavbarBrand\r\n            targetElementId=\"navbar-menu\"\r\n            active={this.state.isMenuActive}\r\n            onBurgerClick={this.toggleMenu}\r\n          />\r\n          <NavbarMenu id=\"navbar-menu\" active={this.state.isMenuActive} />\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import { Field } from '@siren-js/core';\r\nimport { useState } from 'react';\r\n\r\nexport const BasicFormField = ({ children, field }: BasicFieldProps) => (\r\n  <FormField>\r\n    <Label field={field} />\r\n    <FormControl>{children}</FormControl>\r\n  </FormField>\r\n);\r\n\r\nexport type BasicFieldProps = FieldProp & ParentProps;\r\n\r\nexport interface FieldProp {\r\n  field: Field;\r\n}\r\n\r\nexport interface ParentProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const FormControl = (props: ParentProps) => (\r\n  <div className=\"control\">{props.children}</div>\r\n);\r\n\r\nexport const FormField = (props: ParentProps) => (\r\n  <div className=\"field\">{props.children}</div>\r\n);\r\n\r\nexport const Label = ({ field }: FieldProp) =>\r\n  field.type === 'hidden' ? null : (\r\n    <label className=\"label\">{labelText(field)}</label>\r\n  );\r\n\r\nexport const labelText = (field: Field) => field.title ?? field.name;\r\n\r\nexport function useFieldValue(field: Field): [string, OnChangeEvent] {\r\n  const [value, setValue] = useState(String(field.value ?? ''));\r\n  const onChange: OnChangeEvent = ({ target: { value } }) => {\r\n    setValue(value);\r\n    field.value = value;\r\n  };\r\n  return [value, onChange];\r\n}\r\n\r\nexport type OnChangeEvent = React.ChangeEventHandler<\r\n  HTMLInputElement | HTMLTextAreaElement\r\n>;\r\n","import { useState } from 'react';\r\nimport { FieldProp, FormControl, FormField, labelText } from './core';\r\n\r\nexport default function CheckboxControl({ field }: FieldProp) {\r\n  const [checked, setChecked] = useState(!!field.checked);\r\n  return (\r\n    <FormField>\r\n      <FormControl>\r\n        <label className=\"checkbox\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={checked}\r\n            onChange={({ target: { checked } }) => {\r\n              field.checked = checked;\r\n              setChecked(checked);\r\n            }}\r\n          />\r\n          &nbsp;\r\n          {labelText(field)}\r\n        </label>\r\n      </FormControl>\r\n    </FormField>\r\n  );\r\n}\r\n","import { Icon, IconContainerSize } from '../../util';\r\nimport {\r\n  BasicFormField,\r\n  FieldProp,\r\n  FormField,\r\n  Label,\r\n  useFieldValue\r\n} from './core';\r\n\r\nconst controlIcons = new Map<string, string>([\r\n  ['search', 'search'],\r\n  ['tel', 'phone'],\r\n  ['url', 'link'],\r\n  ['email', 'envelope'],\r\n  ['password', 'lock'],\r\n  ['date', 'calendar-day'],\r\n  ['month', 'calendar'],\r\n  ['week', 'calendar-week'],\r\n  ['time', 'clock'],\r\n  ['datetime-local', 'calendar-alt'],\r\n  ['number', 'hashtag']\r\n]);\r\n\r\nexport default function DefaultInputControl({ field }: FieldProp) {\r\n  const [value, onChange] = useFieldValue(field);\r\n  const input = (\r\n    <input\r\n      className=\"input\"\r\n      type={field.type}\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n  const controlIcon = controlIcons.get(field.type ?? 'text');\r\n  return controlIcon === undefined ? (\r\n    <BasicFormField field={field}>{input}</BasicFormField>\r\n  ) : (\r\n    <FormField>\r\n      <Label field={field} />\r\n      <div className=\"control has-icons-left\">\r\n        {input}\r\n        <Icon\r\n          name={controlIcon}\r\n          containerSize={IconContainerSize.Small}\r\n          left={true}\r\n        />\r\n      </div>\r\n    </FormField>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { BasicFormField, FieldProp } from './core';\r\n\r\nexport default function FileUploadControl({ field }: FieldProp) {\r\n  const [selectedFiles, setSelectedFiles] = useState(null as FileList | null);\r\n  return (\r\n    <BasicFormField field={field}>\r\n      <div className={`file${selectedFiles?.length ? ' has-name' : ''}`}>\r\n        <label className=\"file-label\">\r\n          <input\r\n            type=\"file\"\r\n            className=\"file-input\"\r\n            multiple={!!field.multiple}\r\n            onChange={async ({ target: { files } }) => {\r\n              setSelectedFiles(files);\r\n              field.files = files;\r\n            }}\r\n          />\r\n          <span className=\"file-cta\">\r\n            <span className=\"file-icon\">\r\n              <i className=\"fas fa-upload\"></i>\r\n            </span>\r\n            <span className=\"file-label\">Choose a file...</span>\r\n          </span>\r\n          {selectedFiles?.length ? (\r\n            <span className=\"file-name\">\r\n              {[...selectedFiles].map((file) => file.name)}\r\n            </span>\r\n          ) : null}\r\n        </label>\r\n      </div>\r\n    </BasicFormField>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { FieldProp, FormControl, FormField, Label } from './core';\r\n\r\nexport default function RadioButtonControl({ field }: FieldProp) {\r\n  const buttons = field.group as any[]; // TODO: guard type\r\n  const init = buttons.findIndex((button) => button.checked);\r\n  const [checkedIndex, setCheckedIndex] = useState(init);\r\n  return (\r\n    <FormField>\r\n      <Label field={field} />\r\n      <FormControl>\r\n        {buttons.map((button, index) => (\r\n          <label className=\"radio\" key={index}>\r\n            <input\r\n              type=\"radio\"\r\n              name={field.name}\r\n              value={index}\r\n              checked={index === checkedIndex}\r\n              onChange={() => {\r\n                if (checkedIndex !== -1) {\r\n                  buttons[checkedIndex].checked = false;\r\n                }\r\n                buttons[index].checked = true;\r\n                setCheckedIndex(index);\r\n              }}\r\n            />\r\n            &nbsp;\r\n            {button.title}\r\n          </label>\r\n        ))}\r\n      </FormControl>\r\n    </FormField>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { BasicFormField, FieldProp } from './core';\r\n\r\nexport default function SelectControl({ field }: FieldProp) {\r\n  const options = field.options as any[]; // TODO: guard type\r\n  // TODO: account for multiple\r\n  const init = options.findIndex((option) => option.selected);\r\n  const [selectedIndex, setSelectedIndex] = useState(init);\r\n  return (\r\n    <BasicFormField field={field}>\r\n      <div className=\"select\">\r\n        <select\r\n          value={\r\n            options[selectedIndex]?.value ?? options[selectedIndex]?.title ?? ''\r\n          }\r\n          onChange={(e) => {\r\n            if (selectedIndex !== -1) {\r\n              options[selectedIndex].selected = false;\r\n            }\r\n            options[e.target.selectedIndex].selected = true;\r\n            setSelectedIndex(e.target.selectedIndex);\r\n          }}\r\n        >\r\n          {options.map((option, index) => (\r\n            <option key={index} value={option.value}>\r\n              {option.title}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </BasicFormField>\r\n  );\r\n}\r\n","import { BasicFormField, FieldProp, useFieldValue } from './core';\r\n\r\nexport default function TextareaControl({ field }: FieldProp) {\r\n  const [value, onChange] = useFieldValue(field);\r\n  return (\r\n    <BasicFormField field={field}>\r\n      <textarea\r\n        className=\"textarea\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></textarea>\r\n    </BasicFormField>\r\n  );\r\n}\r\n","import CheckboxControl from './CheckboxControl';\r\nimport { FieldProp } from './core';\r\nimport DefaultInputControl from './DefaultInputControl';\r\nimport FileUploadControl from './FileUploadControl';\r\nimport RadioButtonControl from './RadioButtonControl';\r\nimport SelectControl from './SelectControl';\r\nimport TextareaControl from './TextareaControl';\r\n\r\nexport default function InputControl({ field }: FieldProp) {\r\n  switch (field.type) {\r\n    case 'checkbox':\r\n      return <CheckboxControl field={field} />;\r\n    case 'file':\r\n      return <FileUploadControl field={field} />;\r\n    case 'radio':\r\n      return <RadioButtonControl field={field} />;\r\n    case 'select':\r\n      return <SelectControl field={field} />;\r\n    case 'textarea':\r\n      return <TextareaControl field={field} />;\r\n    default:\r\n      return <DefaultInputControl field={field} />;\r\n  }\r\n}\r\n","import { Field } from '@siren-js/core';\r\nimport { withPreventDefault } from '../../../with';\r\nimport InputControl from '../field';\r\n\r\nexport default function ActionForm({\r\n  fields,\r\n  onSubmit,\r\n  onCancel\r\n}: ActionFormProps) {\r\n  return (\r\n    <form onSubmit={withPreventDefault(onSubmit)}>\r\n      {fields.length === 0 ? (\r\n        <p className=\"subtitle\">This action has no fields.</p>\r\n      ) : (\r\n        fields.map((field) => <InputControl key={field.name} field={field} />)\r\n      )}\r\n      <p className=\"buttons\">\r\n        <button\r\n          className=\"button is-info\"\r\n          onClick={withPreventDefault(onSubmit)}\r\n        >\r\n          Submit\r\n        </button>\r\n        <button\r\n          className=\"button is-info is-outlined\"\r\n          onClick={withPreventDefault(onCancel)}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </p>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport interface ActionFormProps {\r\n  fields: readonly Field[];\r\n  onCancel: () => void;\r\n  onSubmit: () => void;\r\n}\r\n","import { Action } from '@siren-js/core';\r\nimport ActionForm from './ActionForm';\r\nimport { Modal } from '../../util';\r\n\r\nexport default function ActionFormModal(props: ActionFormModalProps) {\r\n  const { active, action, onClose, onSubmit } = props;\r\n  return (\r\n    <Modal active={active} onClose={onClose}>\r\n      <div className=\"box\">\r\n        <p className=\"title\">{action.title ?? action.name}</p>\r\n        <ActionForm\r\n          fields={action.fields ?? []}\r\n          onSubmit={() => onSubmit(action)}\r\n          onCancel={onClose}\r\n        />\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport interface ActionFormModalProps {\r\n  active: boolean;\r\n  action: Action;\r\n  onClose: () => void;\r\n  onSubmit: (action: Action) => void;\r\n}\r\n","import { Action } from '@siren-js/core';\r\nimport React from 'react';\r\nimport withFn, { withPreventDefault } from '../../../with';\r\nimport { Panel } from '../../util';\r\nimport ActionFormModal from './ActionFormModal';\r\n\r\nexport default class ActionsPanel extends React.Component<\r\n  ActionsProps,\r\n  ActionsState\r\n> {\r\n  state: ActionsState = {\r\n    activeModal: null\r\n  };\r\n\r\n  constructor(props: ActionsProps) {\r\n    super(props);\r\n    this.activate = this.activate.bind(this);\r\n    this.deactivate = this.deactivate.bind(this);\r\n  }\r\n\r\n  activate(actionName: string) {\r\n    this.setState({ activeModal: actionName });\r\n  }\r\n\r\n  deactivate() {\r\n    this.setState({ activeModal: null });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Panel title=\"Actions\">\r\n        {this.props.actions.map((action, index) => (\r\n          <React.Fragment key={index}>\r\n            <ActionPanelBlock action={action} onClick={this.activate} />\r\n            <ActionFormModal\r\n              active={this.state.activeModal === action.name}\r\n              action={action}\r\n              onClose={this.deactivate}\r\n              onSubmit={withFn(this.props.onSubmit, this.deactivate)}\r\n            />\r\n          </React.Fragment>\r\n        ))}\r\n      </Panel>\r\n    );\r\n  }\r\n}\r\n\r\nexport interface ActionsProps {\r\n  actions: readonly Action[];\r\n  onSubmit: (action: Action) => void;\r\n}\r\n\r\nexport interface ActionsState {\r\n  activeModal: string | null;\r\n}\r\n\r\nconst ActionPanelBlock = ({ action, onClick }: ActionPanelBlockProps) => (\r\n  <a\r\n    href=\"/#\"\r\n    className=\"panel-block\"\r\n    onClick={withPreventDefault(() => onClick(action.name))}\r\n  >\r\n    <span className=\"panel-icon\">\r\n      <i className=\"fas fa-file-alt\" aria-hidden=\"true\"></i>\r\n    </span>\r\n    {action.title ?? action.name}\r\n  </a>\r\n);\r\n\r\ninterface ActionPanelBlockProps {\r\n  action: Action;\r\n  onClick: (actionName: string) => void;\r\n}\r\n","import { Link } from '@siren-js/core';\r\nimport { withPreventDefault } from '../../../with';\r\n\r\nexport default function LinkPanelBlock({ link, onClick }: LinkProps) {\r\n  const isActive = link.rel.includes('self');\r\n  return (\r\n    <a\r\n      href=\"/#\"\r\n      className={`panel-block${isActive ? ' is-active' : ''}`}\r\n      onClick={withPreventDefault(() => onClick(link))}\r\n    >\r\n      <span className=\"panel-icon\">\r\n        <i className=\"fas fa-link\" aria-hidden=\"true\"></i>\r\n      </span>\r\n      {link.title ?? link.rel.join(', ')}\r\n    </a>\r\n  );\r\n}\r\n\r\nexport interface LinkProps {\r\n  link: Link;\r\n  onClick: (link: Link) => void;\r\n}\r\n","import { Link } from '@siren-js/core';\r\nimport { Panel } from '../../util';\r\nimport LinkPanelBlock from './LinkPanelBlock';\r\n\r\nexport default function LinksPanel({ links, onClick }: LinksProps) {\r\n  return (\r\n    <Panel title=\"Links\">\r\n      {links.map((link, index) => (\r\n        <LinkPanelBlock key={index} link={link} onClick={onClick} />\r\n      ))}\r\n    </Panel>\r\n  );\r\n}\r\n\r\nexport interface LinksProps {\r\n  links: readonly Link[];\r\n  onClick: (link: Link) => void;\r\n}\r\n","import toTitleCase from 'to-title-case';\r\nimport SettingsContext from '../../SettingsContext';\r\n\r\nexport default function Properties(props: PropertiesProps) {\r\n  return (\r\n    <SettingsContext.Consumer>\r\n      {({ titleCasePropertyNames }) => (\r\n        <div className=\"columns is-mobile\">\r\n          <div className=\"column is-narrow\">\r\n            {Object.keys(props.value).map((key) => (\r\n              <div className=\"has-text-right has-text-weight-bold\" key={key}>\r\n                {titleCasePropertyNames ? toTitleCase(key) : key}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"column\">\r\n            {Object.values(props.value).map((value, index) => (\r\n              <div key={index}>\r\n                {value === '' ? <>&nbsp;</> : String(value)}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </SettingsContext.Consumer>\r\n  );\r\n}\r\n\r\nexport interface PropertiesProps {\r\n  value: Record<string, unknown>;\r\n}\r\n","import { Action, EmbeddedEntity, Link } from '@siren-js/core';\r\nimport Rendering from '../Rendering';\r\n\r\nexport default function EmbeddedEntityModal(props: EmbeddedEntityModalProps) {\r\n  const { active, embeddedEntity, onClose, onFollow, onSubmit } = props;\r\n  return (\r\n    <div className={`modal${active ? ' is-active' : ''}`}>\r\n      <div className=\"modal-background\" onClick={onClose}></div>\r\n      <div className=\"modal-content\">\r\n        <div className=\"box\">\r\n          <Rendering\r\n            cols={1}\r\n            entity={embeddedEntity}\r\n            onFollow={onFollow}\r\n            onSubmit={onSubmit}\r\n          />\r\n          <div className=\"buttons mt-5\">\r\n            <button\r\n              className=\"button is-info\"\r\n              onClick={() => onFollow(embeddedEntity.getLinksByRel('self')[0])}\r\n            >\r\n              Fetch\r\n            </button>\r\n            <button className=\"button is-info is-outlined\" onClick={onClose}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        className=\"modal-close is-large\"\r\n        aria-label=\"close\"\r\n        onClick={onClose}\r\n      ></button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport interface EmbeddedEntityModalProps {\r\n  active: boolean;\r\n  embeddedEntity: EmbeddedEntity;\r\n  onClose: () => void;\r\n  onFollow: (link: Link) => void;\r\n  onSubmit: (action: Action) => void;\r\n}\r\n","import { EmbeddedEntity } from '@siren-js/core';\r\nimport { withPreventDefault } from '../../../with';\r\n\r\nexport default function EmbeddedEntityPanelBlock({\r\n  embeddedEntity,\r\n  onClick\r\n}: EmbeddedEntityPanelBlockProps) {\r\n  const label =\r\n    embeddedEntity.title ??\r\n    embeddedEntity.getLinksByRel('self')[0]?.title ??\r\n    embeddedEntity.rel.join(', ');\r\n  return (\r\n    <a href=\"/#\" className=\"panel-block\" onClick={withPreventDefault(onClick)}>\r\n      <span className=\"panel-icon\">\r\n        <i className=\"fas fa-bullhorn\" aria-hidden=\"true\"></i>\r\n      </span>\r\n      {label}\r\n    </a>\r\n  );\r\n}\r\n\r\nexport interface EmbeddedEntityPanelBlockProps {\r\n  embeddedEntity: EmbeddedEntity;\r\n  onClick: () => void;\r\n}\r\n","import { Action, EmbeddedLink, SubEntity } from '@siren-js/core';\r\nimport React from 'react';\r\nimport withFn from '../../../with';\r\nimport { Panel } from '../../util';\r\nimport { LinkPanelBlock } from '../link';\r\nimport EmbeddedEntityModal from './EmbeddedEntityModal';\r\nimport EmbeddedEntityPanelBlock from './EmbeddedEntityPanelBlock';\r\n\r\nexport default class SubEntitiesPanel extends React.Component<\r\n  SubEntitiesProps,\r\n  SubEntitiesState\r\n> {\r\n  state: SubEntitiesState = {\r\n    activeModal: null\r\n  };\r\n\r\n  constructor(props: SubEntitiesProps) {\r\n    super(props);\r\n    this.activate = this.activate.bind(this);\r\n    this.deactivate = this.deactivate.bind(this);\r\n  }\r\n\r\n  activate(subEntityIndex: number) {\r\n    this.setState({ activeModal: subEntityIndex });\r\n  }\r\n\r\n  deactivate() {\r\n    this.setState({ activeModal: null });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Panel title=\"Sub-Entities\">\r\n        {this.props.subEntities.map((subEntity, index) =>\r\n          subEntity instanceof EmbeddedLink ? (\r\n            <LinkPanelBlock\r\n              key={index}\r\n              link={subEntity}\r\n              onClick={this.props.onFollow}\r\n            />\r\n          ) : (\r\n            <React.Fragment key={index}>\r\n              <EmbeddedEntityPanelBlock\r\n                embeddedEntity={subEntity}\r\n                onClick={() => this.activate(index)}\r\n              />\r\n              <EmbeddedEntityModal\r\n                embeddedEntity={subEntity}\r\n                active={index === this.state.activeModal}\r\n                onClose={this.deactivate}\r\n                onFollow={withFn(this.props.onFollow, this.deactivate)}\r\n                onSubmit={withFn(this.props.onSubmit, this.deactivate)}\r\n              />\r\n            </React.Fragment>\r\n          )\r\n        )}\r\n      </Panel>\r\n    );\r\n  }\r\n}\r\n\r\nexport interface SubEntitiesProps {\r\n  subEntities: readonly SubEntity[];\r\n  onFollow: (link: EmbeddedLink) => void;\r\n  onSubmit: (action: Action) => void;\r\n}\r\n\r\nexport interface SubEntitiesState {\r\n  activeModal: number | null;\r\n}\r\n","import {\r\n  EntityProp,\r\n  OnFollowProp,\r\n  OnSubmitProp,\r\n  RenderProps\r\n} from '../../types';\r\nimport { Tags } from '../util';\r\nimport { ActionsPanel } from './action';\r\nimport { LinksPanel } from './link';\r\nimport Properties from './Properties';\r\nimport { SubEntitiesPanel } from './sub-entity';\r\n\r\nexport default function Rendering(props: RenderingProps) {\r\n  const { cols } = props;\r\n  return cols === 1 ? (\r\n    <SingleColumnRendering {...props} />\r\n  ) : (\r\n    <DoubleColumnRendering {...props} />\r\n  );\r\n}\r\n\r\nexport interface RenderingProps extends RenderProps {\r\n  cols: 1 | 2;\r\n}\r\n\r\nconst SingleColumnRendering = ({ entity, onFollow, onSubmit }: RenderProps) => (\r\n  <div>\r\n    <Header entity={entity} />\r\n    <EntityProperties entity={entity} />\r\n    <EntityActions entity={entity} onSubmit={onSubmit} />\r\n    <EntityLinks entity={entity} onFollow={onFollow} />\r\n    <EntitySubEntities\r\n      entity={entity}\r\n      onFollow={onFollow}\r\n      onSubmit={onSubmit}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst EntityProperties = ({ entity }: EntityProp) =>\r\n  entity.properties ? <Properties value={entity.properties} /> : null;\r\n\r\nconst EntityActions = ({ entity, onSubmit }: EntityProp & OnSubmitProp) =>\r\n  isNonEmpty(entity.actions) ? (\r\n    <ActionsPanel actions={entity.actions} onSubmit={onSubmit} />\r\n  ) : null;\r\n\r\nconst EntityLinks = ({ entity, onFollow }: EntityProp & OnFollowProp) =>\r\n  isNonEmpty(entity.links) ? (\r\n    <LinksPanel links={entity.links} onClick={onFollow} />\r\n  ) : null;\r\n\r\nconst EntitySubEntities = ({ entity, onFollow, onSubmit }: RenderProps) =>\r\n  isNonEmpty(entity.entities) ? (\r\n    <SubEntitiesPanel\r\n      subEntities={entity.entities}\r\n      onFollow={onFollow}\r\n      onSubmit={onSubmit}\r\n    />\r\n  ) : null;\r\n\r\nconst DoubleColumnRendering = ({ entity, onFollow, onSubmit }: RenderProps) => (\r\n  <div>\r\n    <Header entity={entity} />\r\n    <div className=\"columns\">\r\n      <div className=\"column\">\r\n        <EntityProperties entity={entity} />\r\n      </div>\r\n      <div className=\"column\">\r\n        <EntityActions entity={entity} onSubmit={onSubmit} />\r\n      </div>\r\n    </div>\r\n    <div className=\"columns\">\r\n      <div className=\"column\">\r\n        <EntityLinks entity={entity} onFollow={onFollow} />\r\n      </div>\r\n      <div className=\"column\">\r\n        <EntitySubEntities\r\n          entity={entity}\r\n          onFollow={onFollow}\r\n          onSubmit={onSubmit}\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst Header = ({ entity }: EntityProp) => (\r\n  <div className=\"level\">\r\n    <div className=\"level-left\">\r\n      <div className=\"level-item\">\r\n        <p className=\"title\">{entity.title}</p>\r\n      </div>\r\n      <div className=\"level-item\">\r\n        <Tags values={entity.class ?? []} />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nfunction isNonEmpty<T>(value: readonly T[] | undefined): value is readonly T[] {\r\n  return !!value && value.length > 0;\r\n}\r\n","import React from 'react';\r\nimport { EntityProp, RenderProps } from '../../types';\r\nimport { Tabs, View } from './Tabs';\r\nimport Rendering from './Rendering';\r\n\r\nexport default class Renderer extends React.Component<\r\n  RenderProps,\r\n  RendererState\r\n> {\r\n  state: RendererState = {\r\n    view: View.Rendering\r\n  };\r\n\r\n  constructor(props: RenderProps) {\r\n    super(props);\r\n    this.updateView = this.updateView.bind(this);\r\n  }\r\n\r\n  updateView(view: View) {\r\n    this.setState({ view });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Tabs activeTab={this.state.view} onChange={this.updateView} />\r\n        {this.state.view === View.Rendering ? (\r\n          <Rendering\r\n            cols={2}\r\n            entity={this.props.entity}\r\n            onFollow={this.props.onFollow}\r\n            onSubmit={this.props.onSubmit}\r\n          />\r\n        ) : (\r\n          <Source entity={this.props.entity} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport interface RendererState {\r\n  view: View;\r\n}\r\n\r\nconst Source = ({ entity }: EntityProp) => (\r\n  <pre>{JSON.stringify(entity, null, 2)}</pre>\r\n);\r\n","import SirenClient from '@siren-js/client';\r\nimport * as Siren from '@siren-js/core';\r\nimport React from 'react';\r\nimport { Hero, Location, Navbar, Renderer } from './components';\r\nimport SettingsContext, { Settings } from './SettingsContext';\r\n\r\nexport default class App extends React.Component<{}, AppState> {\r\n  private client = new SirenClient();\r\n\r\n  constructor(props = {}) {\r\n    super(props);\r\n    this.fetch = this.fetch.bind(this);\r\n    this.follow = this.follow.bind(this);\r\n    this.submit = this.submit.bind(this);\r\n\r\n    this.state = {\r\n      locationUrl: '',\r\n      titleCasePropertyNames: false,\r\n      toggleTitleCasePropertyNames: () => {\r\n        this.setState({\r\n          titleCasePropertyNames: !this.state.titleCasePropertyNames\r\n        });\r\n      },\r\n      headers: this.client.headers,\r\n      addHeader: (name, value) => {\r\n        this.client.headers.append(name, value);\r\n      },\r\n      deleteHeader: (name) => {\r\n        this.client.headers.delete(name);\r\n        this.setState({}); // trigger a re-render\r\n      },\r\n      editHeader: (name, value) => {\r\n        this.client.headers.set(name, value);\r\n      }\r\n    };\r\n  }\r\n\r\n  async fetch(): Promise<void> {\r\n    const response = await this.client.fetch(this.state.locationUrl);\r\n    this.setState({\r\n      locationUrl: response.url,\r\n      entity: await response.siren()\r\n    });\r\n  }\r\n\r\n  async follow(link: Siren.Link): Promise<void> {\r\n    const response = await this.client.follow(link);\r\n    this.setState({\r\n      locationUrl: response.url,\r\n      entity: await response.siren()\r\n    });\r\n  }\r\n\r\n  async submit(action: Siren.Action): Promise<void> {\r\n    const response = await this.client.submit(action);\r\n    this.setState({\r\n      locationUrl: response.url,\r\n      entity: await response.siren()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SettingsContext.Provider value={this.state}>\r\n        <Navbar />\r\n        <Hero />\r\n        <div className=\"container\">\r\n          <section className=\"section\">\r\n            <Location\r\n              url={this.state.locationUrl}\r\n              onUrlChange={(url) => this.setState({ locationUrl: url })}\r\n              onNavigate={this.fetch}\r\n            />\r\n            {this.state.entity ? (\r\n              <Renderer\r\n                entity={this.state.entity}\r\n                onFollow={this.follow}\r\n                onSubmit={this.submit}\r\n              />\r\n            ) : null}\r\n          </section>\r\n        </div>\r\n      </SettingsContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\ninterface AppState extends Settings {\r\n  entity?: Siren.Entity;\r\n  locationUrl: string;\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}